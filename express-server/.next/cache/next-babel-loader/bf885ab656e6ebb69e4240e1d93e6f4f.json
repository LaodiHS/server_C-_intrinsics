{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Document, { Head, Main, NextScript } from \"next/document\"; // Import styled components ServerStyleSheet\n\nimport { ServerStyleSheet } from \"styled-components\";\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    //Create an instance of ServerStyleSheet\n    const sheet = new ServerStyleSheet();\n    const page = ctx.renderPage(App => props => sheet.collectStyles(__jsx(App, props)));\n    const originalRenderPage = ctx.renderPage;\n\n    ctx.renderPage = () => originalRenderPage({\n      // useful for wrapping the whole react tree\n      enhanceApp: App => App,\n      // useful for wrapping in a per-page basis\n      enhanceComponent: Component => Component\n    });\n\n    const styleTags = sheet.getStyleElement(); // Run the parent `getInitialProps` using `ctx` that now includes our custom `renderPage`\n\n    const initialProps = await Document.getInitialProps(ctx);\n    return _objectSpread({}, initialProps, {\n      styleTags\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"component will mount\");\n  }\n\n  componentWillMount() {\n    console.log('compon');\n  }\n\n  render() {\n    return __jsx(\"html\", null, __jsx(Head, null), __jsx(\"body\", null, __jsx(Main, null), __jsx(\"div\", {\n      id: \"modal\"\n    }), __jsx(NextScript, null)));\n  }\n\n}\n\nexport default MyDocument;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/_document.js"],"names":["Document","Head","Main","NextScript","ServerStyleSheet","MyDocument","getInitialProps","ctx","sheet","page","renderPage","App","props","collectStyles","originalRenderPage","enhanceApp","enhanceComponent","Component","styleTags","getStyleElement","initialProps","componentDidMount","console","log","componentWillMount","render"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD,C,CACA;;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAChC,eAAaM,eAAb,CAA6BC,GAA7B,EAAkC;AAChC;AACA,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd;AAEA,UAAMK,IAAI,GAAGF,GAAG,CAACG,UAAJ,CAAeC,GAAG,IAAIC,KAAK,IACtCJ,KAAK,CAACK,aAAN,CAAoB,MAAC,GAAD,EAASD,KAAT,CAApB,CADW,CAAb;AAGA,UAAME,kBAAkB,GAAGP,GAAG,CAACG,UAA/B;;AAEAH,IAAAA,GAAG,CAACG,UAAJ,GAAiB,MACfI,kBAAkB,CAAC;AACjB;AACAC,MAAAA,UAAU,EAAEJ,GAAG,IAAIA,GAFF;AAGjB;AACAK,MAAAA,gBAAgB,EAAEC,SAAS,IAAIA;AAJd,KAAD,CADpB;;AAOA,UAAMC,SAAS,GAAGV,KAAK,CAACW,eAAN,EAAlB,CAhBgC,CAiBhC;;AACA,UAAMC,YAAY,GAAG,MAAMpB,QAAQ,CAACM,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,6BAAYa,YAAZ;AAA0BF,MAAAA;AAA1B;AACD;;AAEDG,EAAAA,iBAAiB,GACjB;AACEC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;;AACDC,EAAAA,kBAAkB,GAClB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;;AACCE,EAAAA,MAAM,GAAG;AACP,WACE,oBACE,MAAC,IAAD,OADF,EAEE,oBACE,MAAC,IAAD,OADF,EAGE;AAAK,MAAA,EAAE,EAAC;AAAR,MAHF,EAIE,MAAC,UAAD,OAJF,CAFF,CADF;AAWD;;AA5C+B;;AA+ClC,eAAepB,UAAf","sourcesContent":["import Document, { Head, Main, NextScript } from \"next/document\";\n// Import styled components ServerStyleSheet\nimport { ServerStyleSheet } from \"styled-components\";\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    //Create an instance of ServerStyleSheet\n    const sheet = new ServerStyleSheet();\n\n    const page = ctx.renderPage(App => props =>\n      sheet.collectStyles(<App {...props} />)\n    );\n    const originalRenderPage = ctx.renderPage;\n\n    ctx.renderPage = () =>\n      originalRenderPage({\n        // useful for wrapping the whole react tree\n        enhanceApp: App => App,\n        // useful for wrapping in a per-page basis\n        enhanceComponent: Component => Component\n      });\n    const styleTags = sheet.getStyleElement();\n    // Run the parent `getInitialProps` using `ctx` that now includes our custom `renderPage`\n    const initialProps = await Document.getInitialProps(ctx);\n\n    return { ...initialProps, styleTags };\n  }\n\n  componentDidMount()\n  {\n    console.log(\"component will mount\")\n  }\n  componentWillMount()\n  {\n  console.log('compon')\n}\n  render() {\n    return (\n      <html>\n        <Head />\n        <body>\n          <Main />\n          {/* Here we will mount our modal portal */}\n          <div id=\"modal\" />\n          <NextScript />\n        </body>\n      </html>\n    );\n  }\n}\n\nexport default MyDocument;\n"]},"metadata":{},"sourceType":"module"}