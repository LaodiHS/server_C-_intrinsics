{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\nimport Paging from \"./components/layout/Paging\";\n\nvar MyGrid = function MyGrid(_ref) {\n  var data = _ref.data;\n  return __jsx(Grid, {\n    columns: \"100px 1fr 100px\",\n    rows: \"minmax(100px,auto) 1fr minmax(100px,auto)\"\n  }, __jsx(Cell, {\n    width: 3\n  }, \" \", __jsx(Header, {\n    data: [1, 2, 3, 4]\n  })), __jsx(Cell, null, \"Menu\"), __jsx(Paging, null), __jsx(Cell, null, \"Ads\"), __jsx(Cell, {\n    center: true,\n    middle: true\n  }, \"Footer\"));\n};\n\n_c = MyGrid;\n\nvar Index = function Index(_ref2) {\n  var i = _ref2.i,\n      data = _ref2.data,\n      log_in = _ref2.log_in;\n  return __jsx(\"div\", null, __jsx(MyGrid, {\n    data: data\n  }));\n};\n\n_c2 = Index;\nIndex.getPages = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var page,\n      order,\n      res,\n      _args = arguments;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n          order = _args.length > 1 && _args[1] !== undefined ? _args[1] : \"asc\";\n          _context.next = 4;\n          return fetch(\"https://localhost:3000/users/\".concat(page, \"/\").concat(order));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return res.json();\n\n        case 7:\n          res = _context.sent;\n          console.log(\"res::   \", res);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n  var page,\n      order,\n      res,\n      loginres,\n      log_in,\n      data,\n      _args2 = arguments;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          page = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 0;\n          order = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : \"asc\";\n          _context2.next = 4;\n          return fetch(\"https://localhost:3000/users/page/order\");\n\n        case 4:\n          res = _context2.sent;\n          _context2.next = 7;\n          return fetch(\"https://localhost:3000/login?name=George&password=12764896223121514\");\n\n        case 7:\n          loginres = _context2.sent;\n          _context2.next = 10;\n          return loginres.json();\n\n        case 10:\n          log_in = _context2.sent;\n          _context2.next = 13;\n          return res.json();\n\n        case 13:\n          data = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            log_in: log_in,\n            data: data,\n            i: 0\n          });\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}));\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyGrid\");\n$RefreshReg$(_c2, \"Index\");","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/index.js"],"names":["fetch","Link","React","Modal","Login","styled","Grid","Cell","Header","Paging","MyGrid","data","Index","i","log_in","getPages","page","order","res","json","console","log","getInitialProps","loginres"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SACb,MAAC,IAAD;AACE,IAAA,OAAO,EAAE,iBADX;AAEE,IAAA,IAAI,EAAE;AAFR,KAIE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAb,KACG,GADH,EAEE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAAd,IAFF,CAJF,EASE,MAAC,IAAD,eATF,EAUE,MAAC,MAAD,OAVF,EAWE,MAAC,IAAD,cAXF,EAYE,MAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,MAAM;AAAnB,cAZF,CADa;AAAA,CAAf;;KAAMD,M;;AAmBN,IAAME,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,CAAH,SAAGA,CAAH;AAAA,MAAMF,IAAN,SAAMA,IAAN;AAAA,MAAYG,MAAZ,SAAYA,MAAZ;AAAA,SACZ,mBACE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEH;AAAd,IADF,CADY;AAAA,CAAd;;MAAMC,K;AAKNA,KAAK,CAACG,QAAN,yEAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,UAAAA,IAAP,2DAAc,CAAd;AAAiBC,UAAAA,KAAjB,2DAAyB,KAAzB;AAAA;AAAA,iBACCjB,KAAK,wCAAiCgB,IAAjC,cAAyCC,KAAzC,EADN;;AAAA;AACXC,UAAAA,GADW;AAAA;AAAA,iBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEfD,UAAAA,GAFe;AAGfE,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,GAAxB;;AAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAMAN,KAAK,CAACU,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAON,UAAAA,IAAP,8DAAc,CAAd;AAAiBC,UAAAA,KAAjB,8DAAyB,KAAzB;AAAA;AAAA,iBACJjB,KAAK,2CADD;;AAAA;AAChBkB,UAAAA,GADgB;AAAA;AAAA,iBAEClB,KAAK,uEAFN;;AAAA;AAEhBuB,UAAAA,QAFgB;AAAA;AAAA,iBAKDA,QAAQ,CAACJ,IAAT,EALC;;AAAA;AAKhBL,UAAAA,MALgB;AAAA;AAAA,iBAMLI,GAAG,CAACC,IAAJ,EANK;;AAAA;AAMlBR,UAAAA,IANkB;AAAA,4CAOf;AACLG,YAAAA,MAAM,EAANA,MADK;AAELH,YAAAA,IAAI,EAAJA,IAFK;AAGLE,YAAAA,CAAC,EAAE;AAHE,WAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAaA,eAAeD,KAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\nimport Paging from \"./components/layout/Paging\";\nconst MyGrid = ({ data }) => (\n  <Grid\n    columns={\"100px 1fr 100px\"}\n    rows={\"minmax(100px,auto) 1fr minmax(100px,auto)\"}\n  >\n    <Cell width={3}>\n      {\" \"}\n      <Header data={[1, 2, 3, 4]}></Header>\n    </Cell>\n\n    <Cell>Menu</Cell>\n    <Paging></Paging>\n    <Cell>Ads</Cell>\n    <Cell center middle>\n      Footer\n    </Cell>\n  </Grid>\n);\n\nconst Index = ({ i, data, log_in }) => (\n  <div>\n    <MyGrid data={data}></MyGrid>\n  </div>\n);\nIndex.getPages = async (page = 0, order = \"asc\") => {\n  let res = await fetch(`https://localhost:3000/users/${page}/${order}`);\n  res = await res.json();\n  console.log(\"res::   \", res);\n};\n\nIndex.getInitialProps = async (page = 0, order = \"asc\") => {\n  const res = await fetch(`https://localhost:3000/users/page/order`);\n  const loginres = await fetch(\n    `https://localhost:3000/login?name=George&password=12764896223121514`\n  );\n  const log_in = await loginres.json();\n  let data = await res.json();\n  return {\n    log_in,\n    data,\n    i: 0,\n  };\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}