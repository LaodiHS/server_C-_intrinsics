{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport iso_fetch from \"isomorphic-unfetch\";\n\nfunction message() {\n  return {\n    request: request\n  };\n\n  function request(_x) {\n    return _request.apply(this, arguments);\n  }\n\n  function _request() {\n    _request = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(route) {\n      var method,\n          response,\n          json,\n          b,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              method = _args.length > 1 && _args[1] !== undefined ? _args[1] : 'POST';\n              _context.next = 3;\n              return iso_fetch(route, {\n                method: method\n              });\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return response;\n\n            case 6:\n              json = _context.sent;\n              _context.next = 9;\n              return json.json();\n\n            case 9:\n              b = _context.sent;\n\n              if (!response.ok) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"return\", b);\n\n            case 14:\n              return _context.abrupt(\"return\", [{\n                response: response.code\n              }]);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _request.apply(this, arguments);\n  }\n}\n\nvar fetch = message();\nexport default {\n  fetch: fetch\n};","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/fetch.js"],"names":["iso_fetch","message","request","route","method","response","json","b","ok","code","fetch"],"mappings":";;AAAA,OAAOA,SAAP,MAAuB,oBAAvB;;AAGA,SAASC,OAAT,GAAmB;AACf,SAAO;AAAEC,IAAAA,OAAO,EAAPA;AAAF,GAAP;;AADe,WAEAA,OAFA;AAAA;AAAA;;AAAA;AAAA,wEAEf,iBAAuBC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8BC,cAAAA,MAA9B,2DAAuC,MAAvC;AAAA;AAAA,qBAEuBJ,SAAS,CAACG,KAAD,EAAQ;AAACC,gBAAAA,MAAM,EAANA;AAAD,eAAR,CAFhC;;AAAA;AAEMC,cAAAA,QAFN;AAAA;AAAA,qBAGmBA,QAHnB;;AAAA;AAGMC,cAAAA,IAHN;AAAA;AAAA,qBAIcA,IAAI,CAACA,IAAL,EAJd;;AAAA;AAIIC,cAAAA,CAJJ;;AAAA,mBAKIF,QAAQ,CAACG,EALb;AAAA;AAAA;AAAA;;AAAA,+CAMSD,CANT;;AAAA;AAAA,+CAQS,CAAE;AAACF,gBAAAA,QAAQ,EAAGA,QAAQ,CAACI;AAArB,eAAF,CART;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFe;AAAA;AAAA;AAalB;;AAED,IAAMC,KAAK,GAAGT,OAAO,EAArB;AAMA,eAAgB;AAACS,EAAAA,KAAK,EAACA;AAAP,CAAhB","sourcesContent":["import iso_fetch from  \"isomorphic-unfetch\";\n\n\nfunction message() {\n    return { request }\n    async function request(route, method = 'POST')\n    {\n    const response = await iso_fetch(route, {method});\n    const json = await response;\n    let b = await json.json();\n    if (response.ok) {\n      return b;\n    } else {\n      return [ {response : response.code} ];\n    }\n  }\n}\n\nconst fetch = message();\n\n\n\n\n\nexport default  {fetch:fetch}"]},"metadata":{},"sourceType":"module"}