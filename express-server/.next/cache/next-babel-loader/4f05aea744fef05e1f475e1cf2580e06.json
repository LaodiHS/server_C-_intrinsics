{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\n// var mongoUtil = require( 'mongoUtil' );\n// var db = mongoUtil.getDb();\n// db.collection( 'users' ).find();\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport React from \"react\";\nimport styled from 'styled-components';\nimport { Grid, Cell } from \"styled-css-grid\";\n\nconst MyGrid = val => __jsx(Grid, null, _JSON$stringify(_Object$keys(val.object.data)), \"  \") // <Grid columns={val.object.length} gap=\"2px\">\n//     {\n//         val.object.data.map((obj) =>\n//         {\n//            return  Object.entries(obj).map( ([key, val], i) => {\n//                 return <Cell className=\"whatEver\" key={i} > {key} : {val}  </Cell>\n//            });\n//     // <Cell>{JSON.stringify(val)}</Cell>\n//         }\n//         )\n//     }\n//      </Grid>\n;\n\nconst Button = styled.button.withConfig({\n  displayName: \"pages__Button\",\n  componentId: \"sc-18qv4sc-0\"\n})([\"color:palevioletred;font-size:1em;margin:1em;padding:0.25em 1em;border:2px solid palevioletred;border-radius:3px;\"]); // A new component based on Button, but with some override styles\n\nconst TomatoButton = styled(Button).withConfig({\n  displayName: \"pages__TomatoButton\",\n  componentId: \"sc-18qv4sc-1\"\n})([\"color:tomato;border-color:tomato;\"]);\nimport Login from \"./login/login\";\nimport \"../public/styles/a.css\"; // const da =postgres.getUsers();\n\nconst Index = props => __jsx(\"div\", null, _JSON$stringify(props.data), __jsx(MyGrid, {\n  object: props.data\n}));\n\nIndex.getInitialProps = async () => {\n  const pageRequest = `https://localhost:3000/users`;\n  const res = await fetch(pageRequest);\n  const json = await res.json();\n  return {\n    data: json\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/index.js"],"names":["fetch","Link","React","styled","Grid","Cell","MyGrid","val","object","data","Button","button","TomatoButton","Login","Index","props","getInitialProps","pageRequest","res","json"],"mappings":";;;AAAA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;;AACA,MAAMC,MAAM,GAAIC,GAAD,IAEZ,MAAC,IAAD,QAAQ,gBAAe,aAAYA,GAAG,CAACC,MAAJ,CAAWC,IAAvB,CAAf,CAAR,OAFY,CAGX;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAhBJ;;AAmBA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,MAAV;AAAA;AAAA;AAAA,yHAAZ,C,CASA;;AACA,MAAMC,YAAY,GAAGT,MAAM,CAACO,MAAD,CAAT;AAAA;AAAA;AAAA,yCAAlB;AAKA,OAAOG,KAAP,MAAkB,eAAlB;AAEA,OAAO,wBAAP,C,CAEA;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAEd,mBAEM,gBAAeA,KAAK,CAACN,IAArB,CAFN,EAGQ,MAAC,MAAD;AAAQ,EAAA,MAAM,EAAGM,KAAK,CAACN;AAAvB,EAHR,CAFA;;AAmBQK,KAAK,CAACE,eAAN,GAAwB,YAAW;AAC/B,QAAMC,WAAW,GAAI,8BAArB;AACA,QAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACiB,WAAD,CAAvB;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AAEA,SAAO;AACHV,IAAAA,IAAI,EAAEU;AADH,GAAP;AAGH,CARD;;AAUR,eAAeL,KAAf","sourcesContent":["// var mongoUtil = require( 'mongoUtil' );\n// var db = mongoUtil.getDb();\n\n// db.collection( 'users' ).find();\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport React from \"react\";\n\nimport styled from 'styled-components';\nimport { Grid, Cell } from \"styled-css-grid\";\nconst MyGrid = (val) => (\n    \n   <Grid>{ JSON.stringify(Object.keys(val.object.data) ) }  </Grid>   \n    // <Grid columns={val.object.length} gap=\"2px\">\n    //     {\n    //         val.object.data.map((obj) =>\n    //         {\n    //            return  Object.entries(obj).map( ([key, val], i) => {\n    //                 return <Cell className=\"whatEver\" key={i} > {key} : {val}  </Cell>\n    //            });\n        \n    //     // <Cell>{JSON.stringify(val)}</Cell>\n    //         }\n                \n    //         )\n    //     }\n    //      </Grid>\n);\n  \nconst Button = styled.button`\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\n// A new component based on Button, but with some override styles\nconst TomatoButton = styled(Button)`\n  color: tomato;\n  border-color: tomato;\n`;\n\nimport Login from \"./login/login\";\n\nimport \"../public/styles/a.css\";\n\n// const da =postgres.getUsers();\n\nconst Index = (props) => (\n\n<div >\n  \n    { JSON.stringify(props.data)}\n        <MyGrid object= {props.data} ></MyGrid>\n            {/* {props.data.map(( obj) =>\n            {\n               return  Object.entries(obj).map( ([key, val], i) => {\n                return <Cell className=\"whatEver\" key={i} > {key}:{val}  </Cell>\n                });\n            })} */}\n       \n  \n\n    \n</div>\n \n       )\n        Index.getInitialProps = async() => {\n            const pageRequest = `https://localhost:3000/users`;\n            const res = await fetch(pageRequest)\n            const json = await res.json();\n         \n            return {\n                data: json\n            }\n        }\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}