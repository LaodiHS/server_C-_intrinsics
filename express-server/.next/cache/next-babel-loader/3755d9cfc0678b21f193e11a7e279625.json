{"ast":null,"code":"import Document, { Head, Main, NextScript } from 'next/document'; // Import styled components ServerStyleSheet\n\nimport { ServerStyleSheet } from 'styled-components';\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    //Create an instance of ServerStyleSheet\n    const sheet = new ServerStyleSheet(); //  Retrieve styles from components in the page\n    // const page = renderPage((App) => (props) =>\n    // sheet.collectStyles(<App {...props} />),\n    // );\n    // Step 3: Extract the styles as <style> tags\n\n    const styleTags = sheet.getStyleElement();\n    const originalRenderPage = ctx.renderPage;\n\n    ctx.renderPage = () => originalRenderPage({\n      // useful for wrapping the whole react tree\n      enhanceApp: App => App,\n      // useful for wrapping in a per-page basis\n      enhanceComponent: Component => Component\n    }); // Run the parent `getInitialProps` using `ctx` that now includes our custom `renderPage`\n\n\n    const initialProps = await Document.getInitialProps(ctx);\n    return {\n      initialProps\n    };\n  }\n\n}\n\nexport default MyDocument;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/_document.js"],"names":["Document","Head","Main","NextScript","ServerStyleSheet","MyDocument","getInitialProps","ctx","sheet","styleTags","getStyleElement","originalRenderPage","renderPage","enhanceApp","App","enhanceComponent","Component","initialProps"],"mappings":"AAAA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD,C,CACA;;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAKA,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAChC,eAAaM,eAAb,CAA6BC,GAA7B,EACA;AAEE;AACA,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd,CAHF,CAKE;AACA;AACA;AACA;AAEH;;AACG,UAAMK,SAAS,GAAGD,KAAK,CAACE,eAAN,EAAlB;AAEA,UAAMC,kBAAkB,GAAGJ,GAAG,CAACK,UAA/B;;AAEAL,IAAAA,GAAG,CAACK,UAAJ,GAAiB,MACfD,kBAAkB,CAAC;AACjB;AACAE,MAAAA,UAAU,EAAEC,GAAG,IAAIA,GAFF;AAGjB;AACAC,MAAAA,gBAAgB,EAAEC,SAAS,IAAIA;AAJd,KAAD,CADpB,CAfF,CA4BE;;;AACA,UAAMC,YAAY,GAAG,MAAMjB,QAAQ,CAACM,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,WAAO;AAAEU,MAAAA;AAAF,KAAP;AACD;;AAlC+B;;AAqClC,eAAeZ,UAAf","sourcesContent":["import Document, { Head, Main, NextScript } from 'next/document';\n// Import styled components ServerStyleSheet\nimport { ServerStyleSheet } from 'styled-components';\n\n\n\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx)\n  {\n  \n    //Create an instance of ServerStyleSheet\n    const sheet = new ServerStyleSheet();\n\n    //  Retrieve styles from components in the page\n    // const page = renderPage((App) => (props) =>\n    // sheet.collectStyles(<App {...props} />),\n    // );\n    \n // Step 3: Extract the styles as <style> tags\n    const styleTags = sheet.getStyleElement();\n\n    const originalRenderPage = ctx.renderPage\n\n    ctx.renderPage = () =>\n      originalRenderPage({\n        // useful for wrapping the whole react tree\n        enhanceApp: App => App,\n        // useful for wrapping in a per-page basis\n        enhanceComponent: Component => Component,\n\n     \n\n\n\n      })\n\n    // Run the parent `getInitialProps` using `ctx` that now includes our custom `renderPage`\n    const initialProps = await Document.getInitialProps(ctx)\n\n    return { initialProps };\n  }\n}\n\nexport default MyDocument"]},"metadata":{},"sourceType":"module"}