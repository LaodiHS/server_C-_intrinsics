{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\n\nconst MyGrid = ({\n  data\n}) => __jsx(Grid, {\n  columns: \"100px 1fr 100px\",\n  rows: \"minmax(100px,auto) 1fr minmax(100px,auto)\"\n}, __jsx(Cell, {\n  width: 3\n}, \" \", __jsx(Header, null)), __jsx(Cell, null, \"Menu\"), __jsx(Cell, {\n  center: true,\n  middle: true\n}, __jsx(Grid, null), data.map(obj => {\n  return _Object$entries(obj).map(([key, val], i) => {\n    return __jsx(Cell, {\n      key: i\n    }, key, \" : \", val);\n  });\n}), \"   \"), __jsx(Cell, null, \"Ads\"), __jsx(Cell, {\n  center: true,\n  middle: true\n}, \"Footer\"));\n\nconst Index = ({\n  data,\n  log_in\n}) => __jsx(\"div\", null, \"  \", __jsx(MyGrid, {\n  data: data\n}));\n\nIndex.getInitialProps = async () => {\n  const res = await fetch(`https://localhost:3000/users`);\n  const loginres = await fetch(`https://localhost:3000/login?name=George&password=password2`);\n  const log_in = await loginres.json();\n  const data = await res.json();\n  return {\n    log_in,\n    data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/index.js"],"names":["fetch","Link","React","Modal","Login","styled","Grid","Cell","Header","MyGrid","data","map","obj","key","val","i","Index","log_in","getInitialProps","res","loginres","json"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAQC,KAAR,MAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAGb,MAAC,IAAD;AAAO,EAAA,OAAO,EAAE,iBAAhB;AAAmC,EAAA,IAAI,EAAE;AAAzC,GACE,MAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAb,QAAiB,MAAC,MAAD,OAAjB,CADF,EAGE,MAAC,IAAD,eAHF,EAME,MAAC,IAAD;AAAM,EAAA,MAAM,MAAZ;AAAa,EAAA,MAAM;AAAnB,GACE,MAAC,IAAD,OADF,EAEGA,IAAI,CAACC,GAAL,CAASC,GAAG,IACb;AACA,SAAO,gBAAeA,GAAf,EAAoBD,GAApB,CAAwB,CAAC,CAACE,GAAD,EAAMC,GAAN,CAAD,EAAaC,CAAb,KAAmB;AAChD,WACE,MAAC,IAAD;AAAO,MAAA,GAAG,EAAEA;AAAZ,OACCF,GADD,SACSC,GADT,CADF;AAKD,GANM,CAAP;AAOD,CATE,CAFH,QANF,EAmBF,MAAC,IAAD,cAnBE,EAqBF,MAAC,IAAD;AAAM,EAAA,MAAM,MAAZ;AAAa,EAAA,MAAM;AAAnB,YArBE,CAHF;;AA+BA,MAAME,KAAK,GAAG,CAAC;AAAEN,EAAAA,IAAF;AAAOO,EAAAA;AAAP,CAAD,KAAoB,yBAAO,MAAC,MAAD;AAAQ,EAAA,IAAI,EAAEP;AAAd,EAAP,CAAlC;;AACAM,KAAK,CAACE,eAAN,GAAwB,YAAY;AAElC,QAAMC,GAAG,GAAG,MAAMnB,KAAK,CAAE,8BAAF,CAAvB;AACA,QAAMoB,QAAQ,GAAG,MAAMpB,KAAK,CAAE,6DAAF,CAA5B;AACA,QAAMiB,MAAM,GAAG,MAAMG,QAAQ,CAACC,IAAT,EAArB;AACA,QAAMX,IAAI,GAAG,MAAMS,GAAG,CAACE,IAAJ,EAAnB;AAEA,SAAO;AACLJ,IAAAA,MADK;AAELP,IAAAA;AAFK,GAAP;AAID,CAXD;;AAYA,eAAeM,KAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport  React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\n\nconst MyGrid = ({ data }) => (\n \n  \n  <Grid  columns={\"100px 1fr 100px\"} rows={\"minmax(100px,auto) 1fr minmax(100px,auto)\"} >\n    <Cell width={3}> <Header></Header></Cell>\n    {/* <Modal /> */}\n    <Cell>Menu</Cell>\n  \n  \n    <Cell center middle>\n      <Grid ></Grid>\n      {data.map(obj =>\n      {\n      return Object.entries(obj).map(([key, val], i) => {\n        return (\n          <Cell  key={i}>\n          {key} : {val}\n          </Cell>\n        );\n      });\n    })}   </Cell>\n\n<Cell>Ads</Cell>\n\n<Cell center middle>Footer</Cell>\n  </Grid>\n);\n\n\n\n\nconst Index = ({ data,log_in }) =><div>  <MyGrid data={data}></MyGrid></div>;\nIndex.getInitialProps = async () => {\n\n  const res = await fetch(`https://localhost:3000/users`);\n  const loginres = await fetch(`https://localhost:3000/login?name=George&password=password2`);\n  const log_in = await loginres.json();\n  const data = await res.json()\n\n  return {\n    log_in,\n    data\n  };\n};\nexport default Index;\n\n"]},"metadata":{},"sourceType":"module"}