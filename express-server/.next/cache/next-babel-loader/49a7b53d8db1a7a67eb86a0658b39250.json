{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this;\n\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\n\nvar MyGrid = function MyGrid(_ref) {\n  var data = _ref.data;\n  return __jsx(Grid, {\n    columns: \"100px 1fr 100px\",\n    rows: \"minmax(100px,auto) 1fr minmax(100px,auto)\"\n  }, __jsx(Cell, {\n    width: 3\n  }, \" \", __jsx(Header, {\n    data: [1, 2, 3, 4]\n  })), __jsx(Cell, null, \"Menu\"), __jsx(Cell, {\n    center: true,\n    middle: true\n  }, __jsx(Grid, {\n    columns: \"repeat(auto-fit,minmax(120px,1fr))\"\n  }, data.map(function (obj) {\n    return Object.entries(obj).map(function (_ref2, i) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          val = _ref3[1];\n\n      if (key !== \"password\" && key !== \"passwordsalt\") return __jsx(Cell, {\n        width: 2,\n        height: 2,\n        key: i\n      }, key, \" : \", val);\n    });\n  }), \" \"), \" \"), __jsx(Cell, null, \"Ads\"), __jsx(Cell, {\n    center: true,\n    middle: true\n  }, \"Footer\"));\n};\n\n_c = MyGrid;\n\nvar Index = function Index(_ref4) {\n  var i = _ref4.i,\n      data = _ref4.data,\n      log_in = _ref4.log_in;\n  return __jsx(\"div\", null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return console.log(_this);\n    }\n  }, \"click me\"), __jsx(MyGrid, {\n    data: data\n  }));\n};\n\n_c2 = Index;\nIndex.getPages = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var page,\n      order,\n      res,\n      _args = arguments;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n          order = _args.length > 1 && _args[1] !== undefined ? _args[1] : \"asc\";\n          _context.next = 4;\n          return fetch(\"https://localhost:3000/users/\".concat(page, \"/\").concat(order));\n\n        case 4:\n          res = _context.sent;\n          _context.next = 7;\n          return res.json();\n\n        case 7:\n          res = _context.sent;\n          console.log(\"res::   \", res);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n  var page,\n      order,\n      res,\n      loginres,\n      log_in,\n      data,\n      _args2 = arguments;\n  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          page = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 0;\n          order = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : \"asc\";\n          _context2.next = 4;\n          return fetch(\"https://localhost:3000/users/page/order\");\n\n        case 4:\n          res = _context2.sent;\n          _context2.next = 7;\n          return fetch(\"https://localhost:3000/login?name=George&password=12764896223121514\");\n\n        case 7:\n          loginres = _context2.sent;\n          _context2.next = 10;\n          return loginres.json();\n\n        case 10:\n          log_in = _context2.sent;\n          _context2.next = 13;\n          return res.json();\n\n        case 13:\n          data = _context2.sent;\n          console.log(\"Index ::\", Index);\n          return _context2.abrupt(\"return\", {\n            log_in: log_in,\n            data: data,\n            i: 0\n          });\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n}));\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyGrid\");\n$RefreshReg$(_c2, \"Index\");","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/index.js"],"names":["fetch","Link","React","Modal","Login","styled","Grid","Cell","Header","MyGrid","data","map","obj","Object","entries","i","key","val","Index","log_in","console","log","getPages","page","order","res","json","getInitialProps","loginres"],"mappings":"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","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\n\nconst MyGrid = ({ data }) => (\n  <Grid\n    columns={\"100px 1fr 100px\"}\n    rows={\"minmax(100px,auto) 1fr minmax(100px,auto)\"}\n  >\n    <Cell width={3}>\n      {\" \"}\n      <Header data={[1, 2, 3, 4]}></Header>\n    </Cell>\n    {/* <Modal /> */}\n    <Cell>Menu</Cell>\n\n    <Cell center middle>\n      <Grid columns=\"repeat(auto-fit,minmax(120px,1fr))\">\n        {data.map((obj) => {\n          return Object.entries(obj).map(([key, val], i) => {\n            if (key !== \"password\" && key !== \"passwordsalt\")\n              return (\n                <Cell width={2} height={2} key={i}>\n                  {key} : {val}\n                </Cell>\n              );\n          });\n        })}{\" \"}\n      </Grid>{\" \"}\n    </Cell>\n\n    <Cell>Ads</Cell>\n    <Cell center middle>\n      Footer\n    </Cell>\n  </Grid>\n);\n\nconst Index = ({ i,  data, log_in }) => (\n  <div>\n    <button onClick={() => console.log(this) }>click me</button>\n    <MyGrid data={data}></MyGrid>\n  </div>\n);\nIndex.getPages = async (page = 0, order = \"asc\") => {\n  let res = await fetch(`https://localhost:3000/users/${page}/${order}`);\n  res = await res.json();\n  console.log(\"res::   \", res)\n}\n\nIndex.getInitialProps = async (page = 0, order = \"asc\") => {\n  const res = await fetch(`https://localhost:3000/users/page/order`);\n  const loginres = await fetch(\n    `https://localhost:3000/login?name=George&password=12764896223121514`\n  );\n  const log_in = await loginres.json();\n  let data = await res.json();\nconsole.log(\"Index ::\", Index)\n  return {\n  \n    log_in,\n    data,\n    i: 0,\n  };\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}