{"ast":null,"code":"var __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\n\nconst MyGrid = ({\n  data\n}) => __jsx(Grid, {\n  columns: \"100px 1fr 100px\",\n  rows: \"minmax(100px,auto) 1fr minmax(100px,auto)\"\n}, __jsx(Cell, {\n  width: 3\n}, \" \", __jsx(Header, {\n  data: [1, 2, 3, 4]\n})), __jsx(Cell, null, \"Menu\"), __jsx(Cell, {\n  center: true,\n  middle: true\n}, __jsx(Grid, {\n  columns: \"repeat(auto-fit,minmax(120px,1fr))\"\n}, data.map(obj => {\n  return Object.entries(obj).map(([key, val], i) => {\n    if (key !== \"password\" && key !== \"passwordsalt\") return __jsx(Cell, {\n      width: 2,\n      height: 2,\n      key: i\n    }, key, \" : \", val);\n  });\n}), \"  \"), \" \"), __jsx(Cell, null, \"Ads\"), __jsx(Cell, {\n  center: true,\n  middle: true\n}, \"Footer\"));\n\nconst Index = ({\n  data,\n  log_in\n}) => __jsx(\"div\", null, __jsx(MyGrid, {\n  data: data\n}));\n\nIndex.getInitialProps = async () => {\n  const res = await fetch(`https://localhost:3000/users`);\n  const loginres = await fetch(`https://localhost:3000/login?name=George&password=12764896223121514`);\n  const log_in = await loginres.json();\n  let data = await res.json();\n  return {\n    log_in,\n    data\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/index.js"],"names":["fetch","Link","React","Modal","Login","styled","Grid","Cell","Header","MyGrid","data","map","obj","Object","entries","key","val","i","Index","log_in","getInitialProps","res","loginres","json"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAQC,KAAR,MAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAGb,MAAC,IAAD;AAAO,EAAA,OAAO,EAAE,iBAAhB;AAAmC,EAAA,IAAI,EAAE;AAAzC,GACE,MAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAb,QAAiB,MAAC,MAAD;AAAQ,EAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP;AAAd,EAAjB,CADF,EAGE,MAAC,IAAD,eAHF,EAKE,MAAC,IAAD;AAAM,EAAA,MAAM,MAAZ;AAAa,EAAA,MAAM;AAAnB,GACA,MAAC,IAAD;AAAM,EAAA,OAAO,EAAC;AAAd,GACGA,IAAI,CAACC,GAAL,CAASC,GAAG,IACb;AACE,SAAOC,MAAM,CAACC,OAAP,CAAeF,GAAf,EAAoBD,GAApB,CAAwB,CAAC,CAACI,GAAD,EAAMC,GAAN,CAAD,EAAaC,CAAb,KAC/B;AACE,QAAKF,GAAG,KAAK,UAAT,IAAyBA,GAAG,KAAK,cAArC,EACE,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAb;AAAgB,MAAA,MAAM,EAAE,CAAxB;AAA2B,MAAA,GAAG,EAAEE;AAAhC,OACHF,GADG,SACKC,GADL,CADF;AAKL,GARQ,CAAP;AASH,CAXE,CADH,OADA,MALF,EAoBF,MAAC,IAAD,cApBE,EAqBF,MAAC,IAAD;AAAM,EAAA,MAAM,MAAZ;AAAa,EAAA,MAAM;AAAnB,YArBE,CAHF;;AA+BA,MAAME,KAAK,GAAG,CAAC;AAAER,EAAAA,IAAF;AAAOS,EAAAA;AAAP,CAAD,KAAqB,mBAAK,MAAC,MAAD;AAAQ,EAAA,IAAI,EAAET;AAAd,EAAL,CAAnC;;AACAQ,KAAK,CAACE,eAAN,GAAwB,YAAY;AAClC,QAAMC,GAAG,GAAG,MAAMrB,KAAK,CAAE,8BAAF,CAAvB;AACA,QAAMsB,QAAQ,GAAG,MAAMtB,KAAK,CAAE,qEAAF,CAA5B;AACA,QAAMmB,MAAM,GAAG,MAAMG,QAAQ,CAACC,IAAT,EAArB;AACA,MAAIb,IAAI,GAAG,MAAMW,GAAG,CAACE,IAAJ,EAAjB;AAIA,SAAO;AACLJ,IAAAA,MADK;AAELT,IAAAA;AAFK,GAAP;AAID,CAZD;;AAaA,eAAeQ,KAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport  React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\n\nconst MyGrid = ({ data }) => (\n \n  \n  <Grid  columns={\"100px 1fr 100px\"} rows={\"minmax(100px,auto) 1fr minmax(100px,auto)\"} >\n    <Cell width={3}> <Header data={[1,2,3,4]} ></Header></Cell>\n    {/* <Modal /> */}\n    <Cell>Menu</Cell>\n  \n    <Cell center middle>\n    <Grid columns=\"repeat(auto-fit,minmax(120px,1fr))\">\n      {data.map(obj =>\n      {\n        return Object.entries(obj).map(([key, val], i) =>\n        {\n          if ((key !== \"password\") && (key !== \"passwordsalt\"))\n            return (\n              <Cell width={2} height={2} key={i}>\n          {key} : {val}\n          </Cell>\n        );\n      });\n    })}  </Grid> </Cell>\n\n<Cell>Ads</Cell>\n<Cell center middle>Footer</Cell>\n  </Grid>\n);\n\n\n\n\nconst Index = ({ data,log_in }) => <div><MyGrid data={data}></MyGrid></div>;\nIndex.getInitialProps = async () => {\n  const res = await fetch(`https://localhost:3000/users`);\n  const loginres = await fetch(`https://localhost:3000/login?name=George&password=12764896223121514`);\n  const log_in = await loginres.json();\n  let data = await res.json()\n\n \n\n  return {\n    log_in,\n    data\n  };\n};\nexport default Index;\n\n"]},"metadata":{},"sourceType":"module"}