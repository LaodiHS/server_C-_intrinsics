{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar __jsx = React.createElement;\n// var mongoUtil = require( 'mongoUtil' );\n// var db = mongoUtil.getDb();\n// db.collection( 'users' ).find();\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport React from \"react\";\nimport styled from 'styled-components';\nimport { Grid, Cell } from \"styled-css-grid\";\n\nconst MyGrid = () => __jsx(Grid, {\n  columns: 2,\n  gap: \"2px\"\n}, __jsx(Cell, null, \"foo\"), __jsx(Cell, {\n  height: 2\n}, \"bar\"), __jsx(Cell, {\n  width: 2\n}, \"baz\"));\n\nconst Button = styled.button.withConfig({\n  displayName: \"pages__Button\",\n  componentId: \"sc-18qv4sc-0\"\n})([\"color:palevioletred;font-size:1em;margin:1em;padding:0.25em 1em;border:2px solid palevioletred;border-radius:3px;\"]); // A new component based on Button, but with some override styles\n\nconst TomatoButton = styled(Button).withConfig({\n  displayName: \"pages__TomatoButton\",\n  componentId: \"sc-18qv4sc-1\"\n})([\"color:tomato;border-color:tomato;\"]);\nimport Login from \"./login/login\";\nimport \"../public/styles/a.css\"; // const da =postgres.getUsers();\n\nconst Index = props => __jsx(\"div\", null, __jsx(\"div\", null, props.data.map(obj => {\n  return _Object$entries(obj).map(([key, val], i) => {\n    return __jsx(\"div\", {\n      className: \"whatEver\",\n      key: i\n    }, \" \", key, \":\", val, \"  \");\n  });\n})), __jsx(\"div\", {\n  className: \"box d\"\n}));\n\nIndex.getInitialProps = async () => {\n  const pageRequest = `https://localhost:3000/users`;\n  const res = await fetch(pageRequest);\n  const json = await res.json();\n  return {\n    data: json\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/index.js"],"names":["fetch","Link","React","styled","Grid","Cell","MyGrid","Button","button","TomatoButton","Login","Index","props","data","map","obj","key","val","i","getInitialProps","pageRequest","res","json"],"mappings":";;AAAA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;;AACA,MAAMC,MAAM,GAAG,MACX,MAAC,IAAD;AAAM,EAAA,OAAO,EAAE,CAAf;AAAkB,EAAA,GAAG,EAAC;AAAtB,GACE,MAAC,IAAD,cADF,EAEE,MAAC,IAAD;AAAM,EAAA,MAAM,EAAE;AAAd,SAFF,EAGE,MAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAb,SAHF,CADJ;;AAOA,MAAMC,MAAM,GAAGJ,MAAM,CAACK,MAAV;AAAA;AAAA;AAAA,yHAAZ,C,CASA;;AACA,MAAMC,YAAY,GAAGN,MAAM,CAACI,MAAD,CAAT;AAAA;AAAA;AAAA,yCAAlB;AAKA,OAAOG,KAAP,MAAkB,eAAlB;AAEA,OAAO,wBAAP,C,CAEA;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAEd,mBAGQ,mBACKA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAiBC,GAAF,IAChB;AACG,SAAQ,gBAAeA,GAAf,EAAoBD,GAApB,CAAyB,CAAC,CAACE,GAAD,EAAMC,GAAN,CAAD,EAAaC,CAAb,KAAmB;AACnD,WAAO;AAAM,MAAA,SAAS,EAAC,UAAhB;AAA2B,MAAA,GAAG,EAAEA;AAAhC,YAAsCF,GAAtC,OAA4CC,GAA5C,OAAP;AACC,GAFM,CAAR;AAGF,CALA,CADL,CAHR,EAYE;AAAK,EAAA,SAAS,EAAC;AAAf,EAZF,CAFA;;AAmBQN,KAAK,CAACQ,eAAN,GAAwB,YAAW;AAC/B,QAAMC,WAAW,GAAI,8BAArB;AACA,QAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACoB,WAAD,CAAvB;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AAEA,SAAO;AACHT,IAAAA,IAAI,EAAES;AADH,GAAP;AAGH,CARD;;AAUR,eAAeX,KAAf","sourcesContent":["// var mongoUtil = require( 'mongoUtil' );\n// var db = mongoUtil.getDb();\n\n// db.collection( 'users' ).find();\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport React from \"react\";\n\nimport styled from 'styled-components';\nimport { Grid, Cell } from \"styled-css-grid\";\nconst MyGrid = () => (\n    <Grid columns={2} gap=\"2px\">\n      <Cell>foo</Cell>\n      <Cell height={2}>bar</Cell>\n      <Cell width={2}>baz</Cell>\n    </Grid>\n  );\nconst Button = styled.button`\n  color: palevioletred;\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\n// A new component based on Button, but with some override styles\nconst TomatoButton = styled(Button)`\n  color: tomato;\n  border-color: tomato;\n`;\n\nimport Login from \"./login/login\";\n\nimport \"../public/styles/a.css\";\n\n// const da =postgres.getUsers();\n\nconst Index = (props) => (\n\n<div >\n  \n     \n        <div >\n            {props.data.map(( obj) =>\n            {\n               return  Object.entries(obj).map( ([key, val], i) => {\n                return < div className=\"whatEver\" key={i} > {key}:{val}  </div>\n                });\n            })}\n       </div >\n  \n  <div className=\"box d\"></div>\n    \n</div>\n \n       )\n        Index.getInitialProps = async() => {\n            const pageRequest = `https://localhost:3000/users`;\n            const res = await fetch(pageRequest)\n            const json = await res.json();\n         \n            return {\n                data: json\n            }\n        }\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}