{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"../../../public/styles/a.css\";\nvar divStyle = {\n  backgroundColor: \"#6666ff\",\n  color: \"red\"\n};\n\nclass Paging extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: []\n    };\n    this.i = 0;\n  }\n\n  render(obj = this.state) {\n    console.log(\"state::\", this.state);\n    setInterval(() => {\n      this.getPages(++this.i);\n    }, 10000);\n    return __jsx(MyPaging, {\n      data: obj\n    });\n  }\n\n  async getPages(page = 0, order = \"asc\") {\n    let res = await fetch(`https://localhost:3000/users/${page}/${order}`);\n    res = await res.json();\n    this.setState({\n      data: res\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n}\n\nconst MyPaging = ({\n  data\n}) => __jsx(\"div\", null, __jsx(\"button\", null, \"click me\"), __jsx(Cell, {\n  center: true,\n  middle: true\n}, __jsx(Grid, {\n  columns: \"repeat(auto-fit,minmax(120px,1fr))\"\n}, data.map(obj => {\n  console.log(\"obj:::\", obj);\n  return Object.entries(obj).map(([key, val], i) => {\n    if (key !== \"password\" && key !== \"passwordsalt\") return __jsx(Cell, {\n      width: 2,\n      height: 2,\n      key: i\n    }, data[key], \" : \", val);\n  });\n}), \" \"), \" \"));\n\nexport default Paging;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/components/layout/Paging.js"],"names":["styled","Grid","Cell","fetch","divStyle","backgroundColor","color","Paging","React","Component","constructor","state","data","i","render","obj","console","log","setInterval","getPages","page","order","res","json","setState","MyPaging","map","Object","entries","key","val"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,8BAAP;AACA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,eAAe,EAAE,SADJ;AAEbC,EAAAA,KAAK,EAAE;AAFM,CAAf;;AAIA,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKC,CAAL,GAAS,CAAT;AAED;;AAEDC,EAAAA,MAAM,CAACC,GAAG,GAAG,KAAKJ,KAAZ,EAAmB;AACrBK,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuB,KAAKN,KAA5B;AACAO,IAAAA,WAAW,CAAC,MAAM;AACd,WAAKC,QAAL,CAAc,EAAE,KAAKN,CAArB;AAEH,KAHU,EAGR,KAHQ,CAAX;AAIF,WAAO,MAAC,QAAD;AAAU,MAAA,IAAI,EAAEE;AAAhB,MAAP;AACD;;AACa,QAARI,QAAQ,CAACC,IAAI,GAAG,CAAR,EAAWC,KAAK,GAAG,KAAnB,EAA0B;AACtC,QAAIC,GAAG,GAAG,MAAMnB,KAAK,CAAE,gCAA+BiB,IAAK,IAAGC,KAAM,EAA/C,CAArB;AACAC,IAAAA,GAAG,GAAG,MAAMA,GAAG,CAACC,IAAJ,EAAZ;AACA,SAAKC,QAAL,CAAc;AAAEZ,MAAAA,IAAI,EAAEU;AAAR,KAAd,EAA6B,MAAM;AAEjCN,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACD,KAHD;AAID;;AA1BkC;;AA4BrC,MAAMc,QAAQ,GAAG,CAAC;AAAEb,EAAAA;AAAF,CAAD,KACf,mBACE,iCADF,EAEE,MAAC,IAAD;AAAM,EAAA,MAAM,MAAZ;AAAa,EAAA,MAAM;AAAnB,GACQ,MAAC,IAAD;AAAM,EAAA,OAAO,EAAC;AAAd,GAGDA,IAAI,CAACc,GAAL,CAAUX,GAAD,IAAS;AACfC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AACA,SAAOY,MAAM,CAACC,OAAP,CAAeb,GAAf,EAAoBW,GAApB,CAAwB,CAAC,CAACG,GAAD,EAAMC,GAAN,CAAD,EAAajB,CAAb,KAAmB;AAChD,QAAIgB,GAAG,KAAK,UAAR,IAAsBA,GAAG,KAAK,cAAlC,EACE,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAb;AAAgB,MAAA,MAAM,EAAE,CAAxB;AAA2B,MAAA,GAAG,EAAEhB;AAAhC,OACGD,IAAI,CAACiB,GAAD,CADP,SACiBC,GADjB,CADF;AAKH,GAPM,CAAP;AAQD,CAVF,CAHC,EAcF,GAdE,CADR,EAgBU,GAhBV,CAFF,CADF;;AAwBA,eAAevB,MAAf","sourcesContent":["import styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"../../../public/styles/a.css\";\nvar divStyle = {\n  backgroundColor: \"#6666ff\",\n  color: \"red\",\n};\nclass Paging extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: [],\n    };\n    this.i = 0;\n  \n  }\n\n  render(obj = this.state) {\n      console.log(\"state::\", this.state);\n      setInterval(() => {\n          this.getPages(++this.i);\n          \n      }, 10000);\n    return <MyPaging data={obj}></MyPaging>;\n  }\n  async getPages(page = 0, order = \"asc\") {\n    let res = await fetch(`https://localhost:3000/users/${page}/${order}`);\n    res = await res.json();\n    this.setState({ data: res }, () => {\n     \n      console.log(this.state);\n    });\n  }\n}\nconst MyPaging = ({ data }) => (\n  <div>\n    <button>click me</button>\n    <Cell center middle>\n            <Grid columns=\"repeat(auto-fit,minmax(120px,1fr))\">\n                \n        {\n           data.map((obj) => {\n              console.log(\"obj:::\", obj);\n              return Object.entries(obj).map(([key, val], i) => {\n                if (key !== \"password\" && key !== \"passwordsalt\")\n                  return (\n                    <Cell width={2} height={2} key={i}>\n                      {data[key]} : {val}\n                    </Cell>\n                  );\n              });\n            })\n        }{\" \"}\n      </Grid>{\" \"}\n    </Cell>\n  </div>\n);\n\nexport default Paging;\n"]},"metadata":{},"sourceType":"module"}