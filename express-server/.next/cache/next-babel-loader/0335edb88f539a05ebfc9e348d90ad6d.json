{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar __jsx = React.createElement;\nimport fetch from \"../pages/fetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\n\nvar MyGrid = function MyGrid(_ref) {\n  var data = _ref.data;\n  return __jsx(Grid, {\n    columns: data.length,\n    gap: \"2px\"\n  }, __jsx(Modal, null), data.map(function (obj) {\n    return _Object$entries(obj).map(function (_ref2, i) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          val = _ref3[1];\n\n      return __jsx(Cell, {\n        className: \"whatEver\",\n        key: i\n      });\n    });\n  }));\n};\n\nvar Index = function Index(_ref4) {\n  var data = _ref4.data,\n      log_in = _ref4.log_in;\n  return __jsx(\"div\", null, \" \", _JSON$stringify(log_in), \" \", __jsx(MyGrid, {\n    data: data\n  }));\n};\n\nIndex.getInitialProps = function _callee() {\n  var f, log_in, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          f = fetch();\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(f.request(\"https://localhost:3000/users\", \"get\"));\n\n        case 3:\n          log_in = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(f.request(\"https://localhost:3000/login?name=George&password=password2\", \"get\"));\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            log_in: log_in,\n            data: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/index.js"],"names":["fetch","Link","React","Modal","Login","styled","Grid","Cell","MyGrid","data","length","map","obj","i","key","val","Index","log_in","getInitialProps","f","request"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAQC,KAAR,MAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAEC,IAAF,QAAEA,IAAF;AAAA,SACX,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,IAAI,CAACC,MAApB;AAA4B,IAAA,GAAG,EAAC;AAAhC,KACA,MAAC,KAAD,OADA,EAGCD,IAAI,CAACE,GAAL,CAAS,UAAAC,GAAG,EAAI;AACf,WAAO,gBAAeA,GAAf,EAAoBD,GAApB,CAAwB,iBAAaE,CAAb,EAAmB;AAAA;AAAA,UAAjBC,GAAiB;AAAA,UAAZC,GAAY;;AAChD,aACE,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,GAAG,EAAEF;AAAhC,QADF;AAKD,KANM,CAAP;AAOD,GARA,CAHD,CADW;AAAA,CAAf;;AAgBA,IAAMG,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGP,IAAH,SAAGA,IAAH;AAAA,MAAQQ,MAAR,SAAQA,MAAR;AAAA,SAAoB,wBAAO,gBAAeA,MAAf,CAAP,OAA+B,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAER;AAAd,IAA/B,CAApB;AAAA,CAAd;;AACAO,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhBC,UAAAA,CAFgB,GAEZnB,KAAK,EAFO;AAAA;AAAA,2CAGDmB,CAAC,CAACC,OAAF,iCAA0C,KAA1C,CAHC;;AAAA;AAGhBH,UAAAA,MAHgB;AAAA;AAAA,2CAIHE,CAAC,CAACC,OAAF,gEAAyE,KAAzE,CAJG;;AAAA;AAIhBX,UAAAA,IAJgB;AAAA,2CAKf;AACLQ,YAAAA,MAAM,EAANA,MADK;AAELR,YAAAA,IAAI,EAAJA;AAFK,WALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAUA,eAAeO,KAAf","sourcesContent":["import fetch from \"../pages/fetch\";\nimport Link from \"next/link\";\nimport  React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\n\n\nconst MyGrid = ({data}) => (\n    <Grid columns={data.length} gap=\"2px\"> \n    <Modal />\n   \n    {data.map(obj => {\n      return Object.entries(obj).map(([key, val], i) => {\n        return (\n          <Cell className=\"whatEver\" key={i}>\n          {/* {key} : {val} */}\n          </Cell>\n        );\n      });\n    })}\n  </Grid>\n);\n\nconst Index = ({ data,log_in }) =><div> {JSON.stringify(log_in)} <MyGrid data={data}></MyGrid></div>;\nIndex.getInitialProps = async () =>\n{\n  const f = fetch();\n  const log_in = await f.request(`https://localhost:3000/users`, \"get\");\n  const data = await f.request(`https://localhost:3000/login?name=George&password=password2`, \"get\");\n  return {\n    log_in,\n    data\n  };\n};\nexport default Index;\n\n"]},"metadata":{},"sourceType":"module"}