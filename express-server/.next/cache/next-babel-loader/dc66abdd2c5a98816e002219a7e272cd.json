{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar __jsx = React.createElement;\n// var mongoUtil = require( 'mongoUtil' );\n// var db = mongoUtil.getDb();\n// db.collection( 'users' ).find();\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\n\nvar MyGrid = function MyGrid(val) {\n  return __jsx(Grid, {\n    columns: val.object.length,\n    gap: \"2px\"\n  }, val.object.map(function (obj) {\n    return _Object$entries(obj).map(function (_ref, i) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          val = _ref2[1];\n\n      return __jsx(Cell, {\n        className: \"whatEver\",\n        key: i\n      }, key, \" : \", val, \" \");\n    });\n  }));\n};\n\nimport Login from \"./login/login\";\nimport \"../public/styles/a.css\"; // const da =postgres.getUsers();\n\nvar Index = function Index(_ref3) {\n  var data = _ref3.data;\n  return __jsx(MyGrid, {\n    data: data\n  });\n};\n\nIndex.getInitialProps = function _callee() {\n  var pageRequest, res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          pageRequest = \"https://localhost:3000/users\";\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(pageRequest));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            data: json\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/index.js"],"names":["fetch","Link","React","styled","Grid","Cell","MyGrid","val","object","length","map","obj","i","key","Login","Index","data","getInitialProps","pageRequest","res","json"],"mappings":";;;;AAAA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,GAAG;AAAA,SAChB,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEA,GAAG,CAACC,MAAJ,CAAWC,MAA1B;AAAkC,IAAA,GAAG,EAAC;AAAtC,KACGF,GAAG,CAACC,MAAJ,CAAWE,GAAX,CAAe,UAAAC,GAAG,EAAI;AACrB,WAAO,gBAAeA,GAAf,EAAoBD,GAApB,CAAwB,gBAAaE,CAAb,EAAmB;AAAA;AAAA,UAAjBC,GAAiB;AAAA,UAAZN,GAAY;;AAChD,aACE,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC,UAAhB;AAA2B,QAAA,GAAG,EAAEK;AAAhC,SACGC,GADH,SACWN,GADX,EACgB,GADhB,CADF;AAKD,KANM,CAAP;AAOD,GARA,CADH,CADgB;AAAA,CAAlB;;AAeA,OAAOO,KAAP,MAAkB,eAAlB;AAEA,OAAO,wBAAP,C,CAEA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGC,IAAH,SAAGA,IAAH;AAAA,SAAc,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEA;AAAd,IAAd;AAAA,CAAd;;AACAD,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,WADgB;AAAA;AAAA,2CAEJlB,KAAK,CAACkB,WAAD,CAFD;;AAAA;AAEhBC,UAAAA,GAFgB;AAAA;AAAA,2CAGHA,GAAG,CAACC,IAAJ,EAHG;;AAAA;AAGhBA,UAAAA,IAHgB;AAAA,2CAKf;AACLJ,YAAAA,IAAI,EAAEI;AADD,WALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AASA,eAAeL,KAAf","sourcesContent":["// var mongoUtil = require( 'mongoUtil' );\n// var db = mongoUtil.getDb();\n\n// db.collection( 'users' ).find();\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\n\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nconst MyGrid = val => (\n  <Grid columns={val.object.length} gap=\"2px\">\n    {val.object.map(obj => {\n      return Object.entries(obj).map(([key, val], i) => {\n        return (\n          <Cell className=\"whatEver\" key={i}>\n            {key} : {val}{\" \"}\n          </Cell>\n        );\n      });\n    })}\n  </Grid>\n);\n\n\nimport Login from \"./login/login\";\n\nimport \"../public/styles/a.css\";\n\n// const da =postgres.getUsers();\n\nconst Index = ({ data }) => <MyGrid data={data}></MyGrid>;\nIndex.getInitialProps = async () => {\n  const pageRequest = `https://localhost:3000/users`;\n  const res = await fetch(pageRequest);\n  const json = await res.json();\n\n  return {\n    data: json\n  };\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}