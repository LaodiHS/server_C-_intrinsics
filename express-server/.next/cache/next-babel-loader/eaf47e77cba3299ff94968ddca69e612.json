{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"../../../public/styles/a.css\";\nvar divStyle = {\n  backgroundColor: \"#6666ff\",\n  color: \"red\"\n};\n\nvar Paging = /*#__PURE__*/function (_React$Component) {\n  _inherits(Paging, _React$Component);\n\n  var _super = _createSuper(Paging);\n\n  function Paging() {\n    var _this;\n\n    _classCallCheck(this, Paging);\n\n    _this = _super.call(this);\n    _this.state = {\n      data: [],\n      getPages: function () {\n        var _getPages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var page,\n              order,\n              res,\n              _args = arguments;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  page = _args.length > 0 && _args[0] !== undefined ? _args[0] : 0;\n                  order = _args.length > 1 && _args[1] !== undefined ? _args[1] : \"asc\";\n                  page = page < 0 ? 0 : page;\n                  _this.state.i = page;\n                  _context.next = 6;\n                  return fetch(\"https://localhost:3000/users/\".concat(page, \"/\").concat(order));\n\n                case 6:\n                  res = _context.sent;\n                  _context.next = 9;\n                  return res.json();\n\n                case 9:\n                  res = _context.sent;\n                  res = Array.from(res);\n\n                  _this.setState({\n                    data: res.map(function (objects) {\n                      return Object.entries(objects);\n                    })\n                  }, function () {});\n\n                case 12:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function getPages() {\n          return _getPages.apply(this, arguments);\n        }\n\n        return getPages;\n      }(),\n      i: 0\n    };\n\n    _this.state.getPages(_this.state.i++);\n\n    return _this;\n  }\n\n  _createClass(Paging, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(MyPaging, {\n        data: this.state\n      });\n    }\n  }]);\n\n  return Paging;\n}(React.Component);\n\nvar MyPaging = function MyPaging(_ref) {\n  var data = _ref.data;\n  return __jsx(Grid, {\n    columns: \"100px 1fr 100px\",\n    rows: \"minmax(100px,auto) 1fr minmax(100px,auto)\"\n  }, __jsx(Cell, null, __jsx(\"button\", {\n    onClick: function onClick() {\n      return data.getPages(++data.i);\n    }\n  }, \" next \"), __jsx(\"button\", {\n    onClick: function onClick() {\n      return data.getPages(--data.i);\n    }\n  }, \" previous \")), __jsx(Cell, {\n    center: true,\n    middle: true\n  }, __jsx(Grid, {\n    columns: \"repeat(auto-fit,minmax(120px,1fr))\"\n  }, data.data.map(function (values) {\n    return values.map(function (_ref2, i) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          val = _ref3[1];\n\n      if (key !== \"password\" && key !== \"passwordsalt\" && key !== \"id\") return __jsx(Cell, {\n        width: 2,\n        height: 2,\n        key: i\n      }, key, \" : \", val);\n    });\n  }), \" \"), \" \"));\n};\n\n_c = MyPaging;\nexport default Paging;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPaging\");","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/components/layout/Paging.js"],"names":["styled","Grid","Cell","fetch","divStyle","backgroundColor","color","Paging","state","data","getPages","page","order","i","res","json","Array","from","setState","map","objects","Object","entries","React","Component","MyPaging","values","key","val"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"../../../public/styles/a.css\";\nvar divStyle = {\n  backgroundColor: \"#6666ff\",\n  color: \"red\",\n};\nclass Paging extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      data: [],\n      getPages: async (page = 0, order = \"asc\") =>\n      {\n        page = page < 0 ? 0 : page\n        this.state.i = page; \n        let res = await fetch(`https://localhost:3000/users/${page}/${order}`);\n        res = await res.json();\n        res = Array.from(res);\n        this.setState({ data : res.map(objects => Object.entries(objects)) }, () => {\n        });\n      },\n      i : 0\n    };\n   \n    this.state.getPages(this.state.i++)\n  }\n\n  render() {\n   \n    return <MyPaging data={this.state}></MyPaging>;\n  }\n \n}\nconst MyPaging = ({ data }) => (\n  <Grid\n  columns={\"100px 1fr 100px\"}\n  rows={\"minmax(100px,auto) 1fr minmax(100px,auto)\"}\n  ><Cell><button onClick={()=>data.getPages(++data.i)}> next </button><button onClick={()=>data.getPages(--data.i)}> previous </button></Cell>\n    \n    <Cell center middle>\n      <Grid columns=\"repeat(auto-fit,minmax(120px,1fr))\">\n      \n        {data.data.map(values => values.map(([key, val], i) =>\n        {\n          if (key !== \"password\" && key !== \"passwordsalt\" && key !==\"id\")\n          return (\n            <Cell width={2} height={2} key={ i}>\n              {key} : {val} \n            </Cell>\n          );\n\n        } ))}{\" \"}\n      </Grid>{\" \"}\n    </Cell>\n  </Grid>\n);\n\nexport default Paging;\n"]},"metadata":{},"sourceType":"module"}