{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"../../../public/styles/a.css\";\nvar divStyle = {\n  backgroundColor: \"#6666ff\",\n  color: \"red\"\n};\n\nclass Paging extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {}\n    };\n    this.i = 0;\n    setInterval(() => {\n      this.getPages(++this.i);\n    }, 10000);\n  }\n\n  async getPages(page = 0, order = \"asc\") {\n    let res = await fetch(`https://localhost:3000/users/${page}/${order}`);\n    res = await res.json();\n    this.setState({\n      data: res\n    });\n  }\n\n  render() {\n    console.log(\"props\", this.props);\n    return __jsx(MyPaging, {\n      data: this.state\n    });\n  }\n\n}\n\nconst MyPaging = ({\n  data\n}) => __jsx(\"div\", null, __jsx(\"button\", null, \"click me\"), __jsx(Cell, {\n  center: true,\n  middle: true\n}, __jsx(Grid, {\n  columns: \"repeat(auto-fit,minmax(120px,1fr))\"\n}, data.map(obj => {\n  console.log(\"obj:::\", obj);\n  return Object.entries(obj).map(([key, val], i) => {\n    if (key !== \"password\" && key !== \"passwordsalt\") return __jsx(Cell, {\n      width: 2,\n      height: 2,\n      key: i\n    }, key, \" : \", val);\n  });\n}), \" \"), \" \"));\n\nexport default Paging;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/components/layout/Paging.js"],"names":["styled","Grid","Cell","fetch","divStyle","backgroundColor","color","Paging","React","Component","constructor","state","data","i","setInterval","getPages","page","order","res","json","setState","render","console","log","props","MyPaging","map","obj","Object","entries","key","val"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,8BAAP;AACA,IAAIC,QAAQ,GAAG;AACbC,EAAAA,eAAe,EAAE,SADJ;AAEbC,EAAAA,KAAK,EAAE;AAFM,CAAf;;AAIA,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,GAAG;AACZ;AAEE,SAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAEA,SAAKC,CAAL,GAAO,CAAP;AACAC,IAAAA,WAAW,CAAC,MAAM;AAAE,WAAKC,QAAL,CAAc,EAAE,KAAKF,CAArB;AAAyB,KAAlC,EAAoC,KAApC,CAAX;AACH;;AACa,QAARE,QAAQ,CAACC,IAAI,GAAG,CAAR,EAAWC,KAAK,GAAG,KAAnB,EAA0B;AACtC,QAAIC,GAAG,GAAG,MAAMf,KAAK,CAAE,gCAA+Ba,IAAK,IAAGC,KAAM,EAA/C,CAArB;AACAC,IAAAA,GAAG,GAAG,MAAMA,GAAG,CAACC,IAAJ,EAAZ;AACE,SAAKC,QAAL,CAAc;AAACR,MAAAA,IAAI,EAACM;AAAN,KAAd;AACH;;AACDG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKC,KAA1B;AACA,WAAO,MAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKb;AAArB,MAAP;AACD;;AAjBkC;;AAmBrC,MAAMc,QAAQ,GAAG,CAAC;AAACb,EAAAA;AAAD,CAAD,KACf,mBACE,iCADF,EAEE,MAAC,IAAD;AAAM,EAAA,MAAM,MAAZ;AAAa,EAAA,MAAM;AAAnB,GACE,MAAC,IAAD;AAAM,EAAA,OAAO,EAAC;AAAd,GACWA,IAAI,CAACc,GAAL,CAAUC,GAAD,IACV;AACJL,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,GAAtB;AACF,SAAOC,MAAM,CAACC,OAAP,CAAeF,GAAf,EAAoBD,GAApB,CAAwB,CAAC,CAACI,GAAD,EAAMC,GAAN,CAAD,EAAalB,CAAb,KAAmB;AAChD,QAAIiB,GAAG,KAAK,UAAR,IAAsBA,GAAG,KAAK,cAAlC,EACE,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,CAAb;AAAgB,MAAA,MAAM,EAAE,CAAxB;AAA2B,MAAA,GAAG,EAAEjB;AAAhC,OACGiB,GADH,SACWC,GADX,CADF;AAKH,GAPM,CAAP;AAQD,CAXQ,CADX,EAYM,GAZN,CADF,EAcU,GAdV,CAFF,CADF;;AAwBA,eAAexB,MAAf","sourcesContent":["import styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport fetch from \"isomorphic-unfetch\";\nimport \"../../../public/styles/a.css\";\nvar divStyle = {\n  backgroundColor: \"#6666ff\",\n  color: \"red\",\n};\nclass Paging extends React.Component {\n  constructor() {\n    super();\n\n      this.state = { data: {}\n};\n      this.i=0\n      setInterval(() => { this.getPages(++this.i) }, 10000);\n  }\n  async getPages(page = 0, order = \"asc\") {\n    let res = await fetch(`https://localhost:3000/users/${page}/${order}`);\n    res = await res.json();\n      this.setState({data:res});\n  }\n  render() {\n    console.log(\"props\", this.props);\n    return <MyPaging data={this.state}></MyPaging>;\n  }\n}\nconst MyPaging = ({data}) => (\n  <div>\n    <button>click me</button>\n    <Cell center middle>\n      <Grid columns=\"repeat(auto-fit,minmax(120px,1fr))\">\n                {data.map((obj) =>\n                {\n            console.log(\"obj:::\", obj)\n          return Object.entries(obj).map(([key, val], i) => {\n            if (key !== \"password\" && key !== \"passwordsalt\")\n              return (\n                <Cell width={2} height={2} key={i}>\n                  {key} : {val}\n                </Cell>\n              );\n          });\n        })}{\" \"}\n      </Grid>{\" \"}\n    </Cell>\n  </div>\n);\n\n\n\nexport default Paging;\n"]},"metadata":{},"sourceType":"module"}