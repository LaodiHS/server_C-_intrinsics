{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\n\nvar MyGrid = function MyGrid(_ref) {\n  var data = _ref.data;\n  return __jsx(Grid, {\n    columns: \"100px 1fr 100px\",\n    rows: \"minmax(100px,auto) 1fr minmax(100px,auto)\"\n  }, __jsx(Cell, {\n    width: 3\n  }, \" \", __jsx(Header, null)), __jsx(Cell, null, \"Menu\"), __jsx(Cell, {\n    center: true,\n    middle: true\n  }, __jsx(Grid, {\n    columns: \"repeat(auto-fit,minmax(120px,1fr))\"\n  }, data.map(function (obj) {\n    return _Object$entries(obj).map(function (_ref2, i) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          val = _ref3[1];\n\n      if (key !== \"password\" && key !== \"passwordsalt\") return __jsx(Cell, {\n        key: i\n      }, key, \" : \", val);\n    });\n  }), \"  \"), \" \"), __jsx(Cell, null, \"Ads\"), __jsx(Cell, {\n    center: true,\n    middle: true\n  }, \"Footer\"));\n};\n\nvar Index = function Index(_ref4) {\n  var data = _ref4.data,\n      log_in = _ref4.log_in;\n  return __jsx(\"div\", null, __jsx(MyGrid, {\n    data: data\n  }));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, loginres, log_in, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://localhost:3000/users\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(\"https://localhost:3000/login?name=George&password=password2\"));\n\n        case 5:\n          loginres = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(loginres.json());\n\n        case 8:\n          log_in = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 11:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            log_in: log_in,\n            data: data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/index.js"],"names":["fetch","Link","React","Modal","Login","styled","Grid","Cell","Header","MyGrid","data","map","obj","i","key","val","Index","log_in","getInitialProps","res","loginres","json"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAQC,KAAR,MAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAGb,MAAC,IAAD;AAAO,IAAA,OAAO,EAAE,iBAAhB;AAAmC,IAAA,IAAI,EAAE;AAAzC,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAb,UAAiB,MAAC,MAAD,OAAjB,CADF,EAGE,MAAC,IAAD,eAHF,EAME,MAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,MAAM;AAAnB,KACA,MAAC,IAAD;AAAM,IAAA,OAAO,EAAC;AAAd,KACGA,IAAI,CAACC,GAAL,CAAS,UAAAC,GAAG,EACb;AACE,WAAO,gBAAeA,GAAf,EAAoBD,GAApB,CAAwB,iBAAaE,CAAb,EAC/B;AAAA;AAAA,UADiCC,GACjC;AAAA,UADsCC,GACtC;;AAAE,UAAID,GAAG,KAAK,UAAT,IAAyBA,GAAG,KAAK,cAApC,EACF,OACE,MAAC,IAAD;AAAO,QAAA,GAAG,EAAED;AAAZ,SACCC,GADD,SACSC,GADT,CADF;AAKD,KAPQ,CAAP;AAQH,GAVE,CADH,OADA,MANF,EAoBF,MAAC,IAAD,cApBE,EAsBF,MAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,MAAM;AAAnB,cAtBE,CAHa;AAAA,CAAf;;AAgCA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,MAAGN,IAAH,SAAGA,IAAH;AAAA,MAAQO,MAAR,SAAQA,MAAR;AAAA,SAAoB,mBAAK,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAEP;AAAd,IAAL,CAApB;AAAA,CAAd;;AACAM,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEJlB,KAAK,gCAFD;;AAAA;AAEhBmB,UAAAA,GAFgB;AAAA;AAAA,2CAGCnB,KAAK,+DAHN;;AAAA;AAGhBoB,UAAAA,QAHgB;AAAA;AAAA,2CAIDA,QAAQ,CAACC,IAAT,EAJC;;AAAA;AAIhBJ,UAAAA,MAJgB;AAAA;AAAA,2CAKLE,GAAG,CAACE,IAAJ,EALK;;AAAA;AAKlBX,UAAAA,IALkB;AAAA,2CASf;AACLO,YAAAA,MAAM,EAANA,MADK;AAELP,YAAAA,IAAI,EAAJA;AAFK,WATe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAcA,eAAeM,KAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport  React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\n\nconst MyGrid = ({ data }) => (\n \n  \n  <Grid  columns={\"100px 1fr 100px\"} rows={\"minmax(100px,auto) 1fr minmax(100px,auto)\"} >\n    <Cell width={3}> <Header></Header></Cell>\n    {/* <Modal /> */}\n    <Cell>Menu</Cell>\n  \n  \n    <Cell center middle>\n    <Grid columns=\"repeat(auto-fit,minmax(120px,1fr))\">\n      {data.map(obj =>\n      {\n        return Object.entries(obj).map(([key, val], i) =>\n        { if((key !== \"password\") && (key !== \"passwordsalt\"))\n        return (\n          <Cell  key={i}>\n          {key} : {val}\n          </Cell>\n        );\n      });\n    })}  </Grid> </Cell>\n\n<Cell>Ads</Cell>\n\n<Cell center middle>Footer</Cell>\n  </Grid>\n);\n\n\n\n\nconst Index = ({ data,log_in }) =><div><MyGrid data={data}></MyGrid></div>;\nIndex.getInitialProps = async () => {\n\n  const res = await fetch(`https://localhost:3000/users`);\n  const loginres = await fetch(`https://localhost:3000/login?name=George&password=password2`);\n  const log_in = await loginres.json();\n  let data = await res.json()\n\n \n\n  return {\n    log_in,\n    data\n  };\n};\nexport default Index;\n\n"]},"metadata":{},"sourceType":"module"}