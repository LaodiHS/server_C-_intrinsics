{"ast":null,"code":"var __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\nimport Paging from \"./components/layout/Paging\";\n\nconst MyGrid = ({\n  data\n}) => __jsx(Grid, {\n  columns: \"100px 1fr 100px\",\n  rows: \"minmax(100px,auto) 1fr minmax(100px,auto)\"\n}, __jsx(Cell, {\n  width: 3\n}, \" \", __jsx(Header, {\n  data: [1, 2, 3, 4]\n})), __jsx(Cell, null, \"Menu\"), __jsx(Paging, null), __jsx(Cell, null, \"Ads\"), __jsx(Cell, {\n  center: true,\n  middle: true\n}, \"Footer\"));\n\nconst Index = ({\n  i,\n  data,\n  log_in\n}) => __jsx(\"div\", null, __jsx(MyGrid, {\n  data: data\n}));\n\nIndex.getPages = async (page = 0, order = \"asc\") => {\n  let res = await fetch(`https://localhost:3000/users/${page}/${order}`);\n  res = await res.json();\n  console.log(\"res::   \", res);\n};\n\nIndex.getInitialProps = async (page = 0, order = \"asc\") => {\n  const res = await fetch(`https://localhost:3000/users/page/order`);\n  const loginres = await fetch(`https://localhost:3000/login?name=George&password=12764896223121514`);\n  const log_in = await loginres.json();\n  let data = await res.json();\n  console.log(\"Index ::\", Index);\n  return {\n    log_in,\n    data,\n    i: 0\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/index.js"],"names":["fetch","Link","React","Modal","Login","styled","Grid","Cell","Header","Paging","MyGrid","data","Index","i","log_in","getPages","page","order","res","json","console","log","getInitialProps","loginres"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,iBAA3B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACb,MAAC,IAAD;AACE,EAAA,OAAO,EAAE,iBADX;AAEE,EAAA,IAAI,EAAE;AAFR,GAIE,MAAC,IAAD;AAAM,EAAA,KAAK,EAAE;AAAb,GACG,GADH,EAEE,MAAC,MAAD;AAAQ,EAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV;AAAd,EAFF,CAJF,EAUE,MAAC,IAAD,eAVF,EAWC,MAAC,MAAD,OAXD,EA2BE,MAAC,IAAD,cA3BF,EA4BE,MAAC,IAAD;AAAM,EAAA,MAAM,MAAZ;AAAa,EAAA,MAAM;AAAnB,YA5BF,CADF;;AAmCA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,CAAF;AAAMF,EAAAA,IAAN;AAAYG,EAAAA;AAAZ,CAAD,KACZ,mBACE,MAAC,MAAD;AAAQ,EAAA,IAAI,EAAEH;AAAd,EADF,CADF;;AAKAC,KAAK,CAACG,QAAN,GAAiB,OAAOC,IAAI,GAAG,CAAd,EAAiBC,KAAK,GAAG,KAAzB,KAAmC;AAClD,MAAIC,GAAG,GAAG,MAAMlB,KAAK,CAAE,gCAA+BgB,IAAK,IAAGC,KAAM,EAA/C,CAArB;AACAC,EAAAA,GAAG,GAAG,MAAMA,GAAG,CAACC,IAAJ,EAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,GAAxB;AACD,CAJD;;AAMAN,KAAK,CAACU,eAAN,GAAwB,OAAON,IAAI,GAAG,CAAd,EAAiBC,KAAK,GAAG,KAAzB,KAAmC;AACzD,QAAMC,GAAG,GAAG,MAAMlB,KAAK,CAAE,yCAAF,CAAvB;AACA,QAAMuB,QAAQ,GAAG,MAAMvB,KAAK,CACzB,qEADyB,CAA5B;AAGA,QAAMc,MAAM,GAAG,MAAMS,QAAQ,CAACJ,IAAT,EAArB;AACA,MAAIR,IAAI,GAAG,MAAMO,GAAG,CAACC,IAAJ,EAAjB;AACFC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBT,KAAxB;AACE,SAAO;AAELE,IAAAA,MAFK;AAGLH,IAAAA,IAHK;AAILE,IAAAA,CAAC,EAAE;AAJE,GAAP;AAMD,CAdD;;AAeA,eAAeD,KAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport React from \"react\";\nimport Modal from \"../portal/Modal\";\nimport \"../public/styles/a.css\";\nimport Login from \"./login/login\";\nimport styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\nimport Header from \"./components/layout/Header\";\nimport Paging from \"./components/layout/Paging\";\nconst MyGrid = ({ data }) => (\n  <Grid\n    columns={\"100px 1fr 100px\"}\n    rows={\"minmax(100px,auto) 1fr minmax(100px,auto)\"}\n  >\n    <Cell width={3}>\n      {\" \"}\n      <Header data={[1, 2, 3, 4]}></Header>\n   \n    </Cell>\n    {/* <Modal /> */}\n    <Cell>Menu</Cell>\n   <Paging></Paging>\n    {/* <Cell center middle>\n      <Grid columns=\"repeat(auto-fit,minmax(120px,1fr))\">\n        {data.map((obj) => {\n          return Object.entries(obj).map(([key, val], i) => {\n            if (key !== \"password\" && key !== \"passwordsalt\")\n              return (\n                <Cell width={2} height={2} key={i}>\n                  {key} : {val}\n                </Cell>\n              );\n          });\n        })}{\" \"}\n      </Grid>{\" \"}\n    </Cell> */}\n\n    <Cell>Ads</Cell>\n    <Cell center middle>\n      Footer\n    </Cell>\n  </Grid>\n);\n\nconst Index = ({ i,  data, log_in }) => (\n  <div>\n    <MyGrid data={data}></MyGrid>\n  </div>\n);\nIndex.getPages = async (page = 0, order = \"asc\") => {\n  let res = await fetch(`https://localhost:3000/users/${page}/${order}`);\n  res = await res.json();\n  console.log(\"res::   \", res)\n}\n\nIndex.getInitialProps = async (page = 0, order = \"asc\") => {\n  const res = await fetch(`https://localhost:3000/users/page/order`);\n  const loginres = await fetch(\n    `https://localhost:3000/login?name=George&password=12764896223121514`\n  );\n  const log_in = await loginres.json();\n  let data = await res.json();\nconsole.log(\"Index ::\", Index)\n  return {\n  \n    log_in,\n    data,\n    i: 0,\n  };\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}