{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport Document from 'next/document';\n\nvar MyDocument =\n/*#__PURE__*/\nfunction (_Document) {\n  _inherits(MyDocument, _Document);\n\n  function MyDocument() {\n    _classCallCheck(this, MyDocument);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyDocument).apply(this, arguments));\n  }\n\n  _createClass(MyDocument, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(ctx) {\n      var originalRenderPage, initialProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              originalRenderPage = ctx.renderPage;\n\n              ctx.renderPage = function () {\n                return originalRenderPage({\n                  // useful for wrapping the whole react tree\n                  enhanceApp: function enhanceApp(App) {\n                    return App;\n                  },\n                  // useful for wrapping in a per-page basis\n                  enhanceComponent: function enhanceComponent(Component) {\n                    return Component;\n                  }\n                });\n              }; // Run the parent `getInitialProps` using `ctx` that now includes our custom `renderPage`\n\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Document.getInitialProps(ctx));\n\n            case 4:\n              initialProps = _context.sent;\n              return _context.abrupt(\"return\", initialProps);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return MyDocument;\n}(Document);\n\nexport default MyDocument;","map":{"version":3,"sources":["/home/hoss/Documents/algorithms/server_layer/server/express-server/pages/document.js"],"names":["Document","MyDocument","ctx","originalRenderPage","renderPage","enhanceApp","App","enhanceComponent","Component","getInitialProps","initialProps"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,eAArB;;IAEMC,U;;;;;;;;;;;;;oCACyBC,G;;;;;;AACrBC,cAAAA,kB,GAAqBD,GAAG,CAACE,U;;AAE/BF,cAAAA,GAAG,CAACE,UAAJ,GAAiB;AAAA,uBACfD,kBAAkB,CAAC;AACjB;AACAE,kBAAAA,UAAU,EAAE,oBAAAC,GAAG;AAAA,2BAAIA,GAAJ;AAAA,mBAFE;AAGjB;AACAC,kBAAAA,gBAAgB,EAAE,0BAAAC,SAAS;AAAA,2BAAIA,SAAJ;AAAA;AAJV,iBAAD,CADH;AAAA,eAAjB,C,CAQA;;;;+CAC2BR,QAAQ,CAACS,eAAT,CAAyBP,GAAzB,C;;;AAArBQ,cAAAA,Y;+CAECA,Y;;;;;;;;;;;;EAfcV,Q;;AAmBzB,eAAeC,UAAf","sourcesContent":["import Document from 'next/document'\n\nclass MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const originalRenderPage = ctx.renderPage\n\n    ctx.renderPage = () =>\n      originalRenderPage({\n        // useful for wrapping the whole react tree\n        enhanceApp: App => App,\n        // useful for wrapping in a per-page basis\n        enhanceComponent: Component => Component,\n      })\n\n    // Run the parent `getInitialProps` using `ctx` that now includes our custom `renderPage`\n    const initialProps = await Document.getInitialProps(ctx)\n\n    return initialProps\n  }\n}\n\nexport default MyDocument"]},"metadata":{},"sourceType":"module"}